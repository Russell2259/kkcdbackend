<!DOCTYPE html>
<html lang="en">

<head>
    <title>Music Player | BAR Tools</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css">
    <link rel="icon" href="img/favicon.png">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Montserrat&display=swap');
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300&display=swap');

        :root {
            --primary-color: #302AE6;
            --secondary-color: #161625;
            --font-color: #424242;
            --bg-color: white;
            --heading-color: #000000;
            --title-font: Poppins;
            --center: center;
            --heading-font: Poppins;
            --heading-size: 20px;
        }

        [data-theme="dark"] {
            --primary-color: #ffffff;
            --secondary-color: #ffffff;
            --font-color: #ffffff;
            --bg-color: #161625;
            --heading-color: #ffffff;
            --title-font: Poppins;
            --title-size: 50px;
            --center: center;
            --heading-font: Poppins;
            --heading-size: 20px;
        }

        body {
            background-color: var(--bg-color);
            color: var(--font-color);
            font-family: Montserrat;

            /*other styles*/
        }

        #title,
        h1 {
            color: var(--secondary-color);
            font-family: var(--title-font);
            font-size: var(--title-size);
            text-align: var(--center);

            /*other styles*/
        }

        #meme,
        h1 {
            color: var(--secondary-color);
            font-family: var(--title-font);
            font-size: 30px;
            text-align: var(--center);

            /*other styles*/
        }

        a {
            color: var(--primary-color);

            /*other styles*/
        }

        #news,
        h5 {
            color: var(--secondary-color);
            font-family: var(--heading-font);
            font-size: var(--heading-size);
            text-align: var(--center);

            /*other styles*/
        }

        .player {
            height: 95vh;
            display: flex;
            align-items: center;
            flex-direction: column;
            justify-content: center;
        }

        .details {
            display: flex;
            align-items: center;
            flex-direction: column;
            justify-content: center;
            margin-top: 25px;
        }

        .track-art {
            margin: 25px;
            height: 250px;
            width: 250px;
            background-size: cover;
            background-position: center;
            border-radius: 15%;
        }

        .now-playing {
            font-size: 1rem;
        }

        .track-name {
            font-size: 3rem;
            font-family: var(--title-font);
        }

        .track-artist {
            font-size: 1.5rem;
        }

        .buttons {
            display: flex;
            flex-direction: row;
            align-items: center;
        }

        .playpause-track,
        .prev-track,
        .next-track {
            padding: 25px;
            opacity: 0.8;

            transition: opacity 0.2s;
        }

        .playpause-track:hover,
        .prev-track:hover,
        .next-track:hover {
            opacity: 1.0;
        }

        .slider_container {
            width: 75%;
            max-width: 400px;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .seek_slider,
        .volume_slider {
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            height: 5px;
            background: var(--secondary-color);
            opacity: 0.7;
            -webkit-transition: 0.2s;
            transition: opacity 0.2s;
        }

        .seek_slider::-webkit-slider-thumb,
        .volume_slider::-webkit-slider-thumb {
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            width: 15px;
            height: 15px;
            background: rgb(1, 48, 255);
            cursor: pointer;
            border-radius: 50%;
        }

        .seek_slider:hover,
        .volume_slider:hover {
            opacity: 1.0;
        }

        .seek_slider {
            width: 60%;
        }

        .volume_slider {
            width: 30%;
        }

        .current-time,
        .total-duration {
            padding: 10px;
        }

        i.fa-volume-down,
        i.fa-volume-up {
            padding: 10px;
        }

        i.fa-play-circle,
        i.fa-pause-circle,
        i.fa-step-forward,
        i.fa-step-backward {
            cursor: pointer;
        }
    </style>
</head>

<body onload="fetchCloak();">
    <div class="player">

        <div class="details">
            <div class="now-playing">PLAYING x OF y</div>
            <div class="track-art"></div>
            <div class="track-name">Track Name</div>
            <div class="track-artist">Track Artist</div>
        </div>

        <!-- Define the section for displaying track buttons -->
        <div class="buttons">
            <div class="prev-track" onclick="prevTrack()">
                <i class="fa fa-step-backward fa-2x"></i>
            </div>
            <div class="playpause-track" onclick="playpauseTrack()">
                <i class="fa fa-play-circle fa-5x"></i>
            </div>
            <div class="next-track" onclick="nextTrack()">
                <i class="fa fa-step-forward fa-2x"></i>
            </div>
        </div>

        <!-- Define the section for displaying the seek slider-->
        <div class="slider_container">
            <div class="current-time">00:00</div>
            <input type="range" min="1" max="100" value="0" class="seek_slider" onchange="seekTo()">
            <div class="total-duration">00:00</div>
        </div>

        <!-- Define the section for displaying the volume slider-->
        <div class="slider_container">
            <i class="fa fa-volume-down"></i>
            <input type="range" min="1" max="100" value="99" class="volume_slider" onchange="setVolume()">
            <i class="fa fa-volume-up"></i>
        </div>
    </div>
    <script type="text/javascript">
        let now_playing = document.querySelector(".now-playing");
        let track_art = document.querySelector(".track-art");
        let track_name = document.querySelector(".track-name");
        let track_artist = document.querySelector(".track-artist");

        let playpause_btn = document.querySelector(".playpause-track");
        let next_btn = document.querySelector(".next-track");
        let prev_btn = document.querySelector(".prev-track");

        let seek_slider = document.querySelector(".seek_slider");
        let volume_slider = document.querySelector(".volume_slider");
        let curr_time = document.querySelector(".current-time");
        let total_duration = document.querySelector(".total-duration");

        // Specify globally used values
        let track_index = 0;
        let isPlaying = false;
        let updateTimer;

        // Create the audio element for the player
        let curr_track = document.createElement('audio');

        // Define the list of tracks that have to be played
        let track_list = [
            {
                name: "Cool Vibes",
                artist: "MrKoolTrix",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/mrkooltrix.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/coolvibes.mp3"
            },
            {
                name: "Candyland",
                artist: "Tobu",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/tobu.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/candyland.mp3"
            },
            {
                name: "Lost",
                artist: "Tobu",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/tobu.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/lost.mp3"
            },
            {
                name: "Windows",
                artist: "K-391",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/K-391.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/windows.mp3"
            }, {
                name: "Jackpot",
                artist: "TheFatRat",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/thefatrat.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/jackpot.mp3"
            }, {
                name: "Vibin'",
                artist: "Unknown Artist",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/mpbg.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/vibin.mp3"
            }, {
                name: "Breakout",
                artist: "Unknown Artist",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/mpbg.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/breakout.mp3"
            }, {
                name: "Abyss",
                artist: "Unknown Artist",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/mpbg.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/abyss.mp3"
            }, {
                name: "Cloud 9",
                artist: "Tobu (Feat. Itro)",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/tobu.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/cloud9.mp3"
            }, {
                name: "Infectious",
                artist: "Tobu",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/tobu.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/infectious.mp3"
            }, {
                name: "Starship",
                artist: "Xaf",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/xaf.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/starship.mp3"
            }, {
                name: "Fireflies",
                artist: "Fireflies [Xaf Remix]",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/xaf.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/fireflies.mp3"
            }, {
                name: "Kaled",
                artist: "Xaf",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/xaf.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/kaled.mp3"
            }, {
                name: "Treenan",
                artist: "Xaf",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/xaf.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/treenan.mp3"
            }, {
                name: "Sunshine",
                artist: "Liam Payne",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/liampayne.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/sunshine.mp3"
            }, {
                name: "Sunflowers",
                artist: "Xaf",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/xaf.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/sunflowers.mp3"
            }, {
                name: "Open Secrets",
                artist: "Xaf",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/xaf.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/oopensecrets.mp3"
            }, {
                name: "Sunburst",
                artist: "Tobu",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/tobu.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/sunburst.mp3"
            }, {
                name: "Louder Now",
                artist: "Tobu",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/tobu.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/loudernow.mp3"
            },
            {
                name: "Memory",
                artist: "Elektronomia",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/elektronomia.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/memory.mp3"
            },
            {
                name: "Rollercoaster",
                artist: "Elektronomia",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/elektronomia.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/rollercoaster.mp3"
            },
            {
                name: "Limitless",
                artist: "Elektronomia",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/elektronomia.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/limitless.mp3"
            },
            {
                name: "Return",
                artist: "Axel Wernberg",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/axelwernberg.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/return.mp3"
            },
            {
                name: "Spirits",
                artist: "Axel Wernberg",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/axelwernberg.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/spirits.mp3"
            },
            {
                name: "Infinity",
                artist: "Axel Wernberg",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/axelwernberg.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/infinity.mp3"
            },
            {
                name: "Life",
                artist: "Axel Wernberg",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/axelwernberg.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/life.mp3"
            },
            {
                name: "Unbeliveable",
                artist: "Owl City",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/owlcity.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/unbeliveable.mp3"
            },
            {
                name: "Spectre",
                artist: "Alan Walker",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/alanwalker.jpeg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/spectre.mp3"
            },
            {
                name: "The Spectre",
                artist: "Alan Walker",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/alanwalker.jpeg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/thespectre.mp3"
            },
            {
                name: "FR Epic",
                artist: "Unknown Artist",
                image: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/mpbg.jpg",
                path: "https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/frepic.mp3"
            },
        ];

        function loadTrack(track_index) { // Clear the previous seek timer
            clearInterval(updateTimer);
            resetValues();

            // Load a new track
            curr_track.src = track_list[track_index].path;
            curr_track.load();

            // Update details of the track
            track_art.style.backgroundImage = "url(" + track_list[track_index].image + ")";
            track_name.textContent = track_list[track_index].name;
            track_artist.textContent = track_list[track_index].artist;
            now_playing.textContent = "PLAYING " + (
                track_index + 1
            ) + " OF " + track_list.length;

            // Set an interval of 1000 milliseconds
            // for updating the seek slider
            updateTimer = setInterval(seekUpdate, 1000);

            // Move to the next track if the current finishes playing
            // using the 'ended' event
            curr_track.addEventListener("ended", nextTrack);
        }

        function random_bg_color() {
            // Get a random number between 64 to 256
            // (for getting lighter colors)
            let red = Math.floor(Math.random() * 256) + 64;
            let green = Math.floor(Math.random() * 256) + 64;
            let blue = Math.floor(Math.random() * 256) + 64;

            // Construct a color withe the given values
            let bgColor = "rgb(" + red + ", " + green + ", " + blue + ")";

            // Set the background to the new color
            document.body.style.background = bgColor;
        }

        // Function to reset all values to their default
        function resetValues() {
            curr_time.textContent = "00:00";
            total_duration.textContent = "00:00";
            seek_slider.value = 0;
        }
        function playpauseTrack() {
            // Switch between playing and pausing
            // depending on the current state
            if (!isPlaying)
                playTrack();
            else
                pauseTrack();

        }

        function playTrack() { // Play the loaded track
            curr_track.play();
            isPlaying = true;

            // Replace icon with the pause icon
            playpause_btn.innerHTML = '<i class="fa fa-pause-circle fa-5x"></i>';
        }

        function pauseTrack() { // Pause the loaded track
            curr_track.pause();
            isPlaying = false;

            // Replace icon with the play icon
            playpause_btn.innerHTML = '<i class="fa fa-play-circle fa-5x"></i>';
        }

        function nextTrack() {
            // Go back to the first track if the
            // current one is the last in the track list
            if (track_index < track_list.length - 1)
                track_index += 1;
            else
                track_index = 0;


            // Load and play the new track
            loadTrack(track_index);
            playTrack();

        }

        function prevTrack() {
            // Go back to the last track if the
            // current one is the first in the track list
            if (track_index > 0)
                track_index -= 1;
            else
                track_index = track_list.length - 1;


            // Load and play the new track
            loadTrack(track_index);
            playTrack();
        }
        function seekTo() {
            // Calculate the seek position by the
            // percentage of the seek slider
            // and get the relative duration to the track
            seekto = curr_track.duration * (seek_slider.value / 100);

            // Set the current track position to the calculated seek position
            curr_track.currentTime = seekto;
        }

        function setVolume() {
            // Set the volume according to the
            // percentage of the volume slider set
            curr_track.volume = volume_slider.value / 100;
        }

        function seekUpdate() {
            let seekPosition = 0;

            // Check if the current track duration is a legible number
            if (!isNaN(curr_track.duration)) {
                seekPosition = curr_track.currentTime * (100 / curr_track.duration);
                seek_slider.value = seekPosition;

                // Calculate the time left and the total duration
                let currentMinutes = Math.floor(curr_track.currentTime / 60);
                let currentSeconds = Math.floor(curr_track.currentTime - currentMinutes * 60);
                let durationMinutes = Math.floor(curr_track.duration / 60);
                let durationSeconds = Math.floor(curr_track.duration - durationMinutes * 60);

                // Add a zero to the single digit time values
                if (currentSeconds < 10) {
                    currentSeconds = "0" + currentSeconds;
                }
                if (durationSeconds < 10) {
                    durationSeconds = "0" + durationSeconds;
                }
                if (currentMinutes < 10) {
                    currentMinutes = "0" + currentMinutes;
                }
                if (durationMinutes < 10) {
                    durationMinutes = "0" + durationMinutes;
                }

                // Display the updated duration
                curr_time.textContent = currentMinutes + ":" + currentSeconds;
                total_duration.textContent = durationMinutes + ":" + durationSeconds;
            }
        }
        // Load the first track in the tracklist
        loadTrack(track_index);
    </script>
    <div class="theme-switch-wrapper">
        <label class="theme-switch" for="checkbox">
            <input style="width: 0px; height: 0px;" type="checkbox" id="checkbox" />
    </div>
    <script src="https://raw.githubusercontent.com/Russell2259/kkcdbackend/main/main.js"></script>
</body>

</html>
